// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator forward-ref and useImperativeHandler 1`] = `
"import {
  forwardRef,
  useImperativeHandle,
  HookContainer,
} from '@devextreme/runtime/inferno-hooks';
export const viewFunction = () => <div />;
const ReactForwardRef = (_, ref) => {
  useImperativeHandle(ref, () => ({ focus: () => {} }), []);
  return viewFunction();
};

function HooksForwardRef(props, ref) {
  return (
    <HookContainer
      renderFn={ReactForwardRef}
      renderProps={props}
      renderRef={ref}
    />
  );
}
const ForwardRef = forwardRef(HooksForwardRef);
export { ForwardRef };
export default ForwardRef;
ForwardRef.defaultProps = {};
HooksForwardRef.defaultProps = ForwardRef.defaultProps;
"
`;

exports[`generator jQueryRegistered 1`] = `
"function Component1(props) {
  return 'content';
}

function HooksComponent1(props) {
  return <InfernoWrapperComponent renderFn={Component1} renderProps={props} />;
}
export { HooksComponent1 as Component1 };
export default Component1;
"
`;

exports[`generator replace fragments 1`] = `
"export const viewFunction = (viewModel) => (
  <>
    <div>a</div>
  </>
);
function SimpleComponent(props) {
  return viewFunction({ props: { ...props } });
}

function HooksSimpleComponent(props) {
  return <HookContainer renderFn={SimpleComponent} renderProps={props} />;
}
export { HooksSimpleComponent as SimpleComponent };
"
`;

exports[`generator replace imports 1`] = `
"import { getTemplate } from '@devextreme/runtime/inferno-hooks';
import {
  useCallback,
  HookContainer,
} from '@devextreme/runtime/inferno-hooks';
export const viewFunction = (m) => (
  <>
    <div>{getTemplate('test')}</div>
  </>
);
function Icon(props) {
  const __sourceType = useCallback(() => '', []);
  return viewFunction({});
}

function HooksIcon(props) {
  return <HookContainer renderFn={Icon} renderProps={props} />;
}
export { HooksIcon as Icon };
export default Icon;
"
`;
