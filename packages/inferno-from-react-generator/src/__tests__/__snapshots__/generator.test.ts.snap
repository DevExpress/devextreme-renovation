// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator React.memo 1`] = `
"import {
  HookContainer,
  InfernoWrapperComponent,
} from '@devextreme/runtime/inferno-hooks';
import { forwardRef } from '@devextreme/runtime/inferno-hooks';
const PureComponent1 = (_props) => <div />;

function HooksPureComponent1(props) {
  return <HookContainer renderFn={PureComponent1} renderProps={props} pure />;
}
export { HooksPureComponent1 as PureComponent1 };
const PureComponent2 = (_props) => <div />;

function HooksPureComponent2(props) {
  return <HookContainer renderFn={PureComponent2} renderProps={props} pure />;
}
export { HooksPureComponent2 as PureComponent2 };
const ReactPureComponent3 = (_props) => <div />;

function HooksPureComponent3(props, ref) {
  return (
    <InfernoWrapperComponent
      renderFn={ReactPureComponent3}
      renderProps={props}
      renderRef={ref}
      pure
    />
  );
}
const PureComponent3 = forwardRef(HooksPureComponent3);
export { PureComponent3 };
"
`;

exports[`generator adds import for HookContainer 1`] = `
"import {
  HookContainer,
} from '@devextreme/runtime/inferno-hooks';
function DxComponent() {
  return <div />;
}

function HooksDxComponent(props) {
  return <HookContainer renderFn={DxComponent} renderProps={props} />;
}
export { HooksDxComponent as DxComponent };
export { DxComponent };
"
`;

exports[`generator adds import for InfernoWrapperComponent 1`] = `
"import {
  InfernoWrapperComponent,
} from '@devextreme/runtime/inferno-hooks';
function DxComponent() {
  return <div />;
}

function HooksDxComponent(props) {
  return <InfernoWrapperComponent renderFn={DxComponent} renderProps={props} />;
}
export { HooksDxComponent as DxComponent };
export { DxComponent };
"
`;

exports[`generator array-destruction 1`] = `
"import { useState } from '@devextreme/runtime/inferno-hooks';
const [, setState] = useState(1);
setState(2);
"
`;

exports[`generator does not remove other imports from react 1`] = `
"import {
  HookContainer,
} from '@devextreme/runtime/inferno-hooks';
import { useEffect, useMemo } from '@devextreme/runtime/inferno-hooks';
function DxComponent() {
  const className = useEffect.toString() + useMemo.toString();
  return <div className={className} />;
}

function HooksDxComponent(props) {
  return <HookContainer renderFn={DxComponent} renderProps={props} />;
}
export { HooksDxComponent as DxComponent };
export { DxComponent };
"
`;

exports[`generator dont change "export {}" 1`] = `
"export {};
"
`;

exports[`generator forward-ref and useImperativeHandler 1`] = `
"import {
  HookContainer,
} from '@devextreme/runtime/inferno-hooks';
import {
  forwardRef,
  useImperativeHandle,
} from '@devextreme/runtime/inferno-hooks';
export const viewFunction = () => <div />;
const ReactForwardRef = (_, ref) => {
  useImperativeHandle(ref, () => ({ focus: () => {} }), []);
  return viewFunction();
};

function HooksForwardRef(props, ref) {
  return (
    <HookContainer
      renderFn={ReactForwardRef}
      renderProps={props}
      renderRef={ref}
    />
  );
}
const ForwardRef = forwardRef(HooksForwardRef);

export { ForwardRef };
export default ForwardRef;
ForwardRef.defaultProps = {};
"
`;

exports[`generator forward-ref and useImperativeHandler direct export const 1`] = `
"import {
  HookContainer,
} from '@devextreme/runtime/inferno-hooks';
import {
  forwardRef,
  useImperativeHandle,
} from '@devextreme/runtime/inferno-hooks';
export const viewFunction = () => <div />;
const ReactForwardRef = (_, ref) => {
  useImperativeHandle(ref, () => ({ focus: () => {} }), []);
  return viewFunction();
};

function HooksForwardRef(props, ref) {
  return (
    <HookContainer
      renderFn={ReactForwardRef}
      renderProps={props}
      renderRef={ref}
    />
  );
}
const ForwardRef = forwardRef(HooksForwardRef);
export { ForwardRef };
export default ForwardRef;
ForwardRef.defaultProps = {};
"
`;

exports[`generator jQueryRegistered 1`] = `
"const JQueryRegistredComponentProps = { prop: 1 };
function JQueryRegisteredComponent(_props) {
  return 'content';
}

function HooksJQueryRegisteredComponent(props) {
  return (
    <InfernoWrapperComponent
      renderFn={JQueryRegisteredComponent}
      renderProps={props}
    />
  );
}
export { HooksJQueryRegisteredComponent as JQueryRegisteredComponent };
HooksJQueryRegisteredComponent.defaultProps = JQueryRegistredComponentProps;
export default JQueryRegisteredComponent;
export function defaultOptions() {
  HooksJQueryRegisteredComponent.defaultProps = Object.create(
    Object.prototype,
    Object.assign(
      Object.getOwnPropertyDescriptors(
        HooksJQueryRegisteredComponent.defaultProps
      )
    )
  );
}
"
`;

exports[`generator removes React default import 1`] = `
"import {
  HookContainer,
} from '@devextreme/runtime/inferno-hooks';
import { getTemplate } from '@devextreme/runtime/inferno-hooks';
import { useCallback } from '@devextreme/runtime/inferno-hooks';
export const viewFunction = (m) => (
  <>
    <div>{getTemplate('test')}</div>
  </>
);
function Icon(props) {
  const __sourceType = useCallback(() => '', []);
  return viewFunction({});
}

function HooksIcon(props) {
  return <HookContainer renderFn={Icon} renderProps={props} />;
}
export { HooksIcon as Icon };
export { Icon };
export default Icon;
"
`;

exports[`generator removes React namespace import 1`] = `
"import {
  HookContainer,
} from '@devextreme/runtime/inferno-hooks';
import { getTemplate } from '@devextreme/runtime/inferno-hooks';
import { useCallback } from '@devextreme/runtime/inferno-hooks';
export const viewFunction = (m) => (
  <>
    <div>{getTemplate('test')}</div>
  </>
);
function Icon(props) {
  const __sourceType = useCallback(() => '', []);
  return viewFunction({});
}

function HooksIcon(props) {
  return <HookContainer renderFn={Icon} renderProps={props} />;
}
export { HooksIcon as Icon };
export { Icon };
export default Icon;
"
`;

exports[`generator replace fragments 1`] = `
"import {
  HookContainer,
} from '@devextreme/runtime/inferno-hooks';
export const viewFunction = (viewModel) => (
  <>
    <div>a</div>
  </>
);
function SimpleComponent(props) {
  return viewFunction({ props: { ...props } });
}

function HooksSimpleComponent(props) {
  return <HookContainer renderFn={SimpleComponent} renderProps={props} />;
}
export { HooksSimpleComponent as SimpleComponent };
export { SimpleComponent };
"
`;

exports[`generator simple component only name 1`] = `
"const simpleComponentProps = { prop: 1 };
function SimpleComponent(_props) {
  return 'content';
}

function HooksSimpleComponent(props) {
  return (
    <InfernoWrapperComponent renderFn={SimpleComponent} renderProps={props} />
  );
}
export { HooksSimpleComponent as SimpleComponent };
const SimpleComponentConst = (_props) => {
  return 'content';
};

function HooksSimpleComponentConst(props) {
  return (
    <InfernoWrapperComponent
      renderFn={SimpleComponentConst}
      renderProps={props}
    />
  );
}
export { HooksSimpleComponentConst as SimpleComponentConst };
HooksSimpleComponent.defaultProps = simpleComponentProps;
"
`;
