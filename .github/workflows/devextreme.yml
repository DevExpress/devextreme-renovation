# This workflow will run tests for DevExtreme generators

name: DevExtreme Compatibility

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

jobs:
  build-generators:
    name: Build Generators
    runs-on: farm
    env:
      VM_IMAGE: UBUNTU
      VM_MEMORY: 3072
      VM_CPU: 2
      VM_TIMEOUT: 7200

    steps:
      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'http://npmproxy:4873'

      - name: Checkout
        uses: ./../../checkout

      - name: Install packages
        run: npm install --no-audit --no-fund --ignore-scripts

      - name: Bootstrap
        run: npm run bootstrap:ci

      - name: Pack
        run: npm run pack

      - uses: actions/upload-artifact@master
        with:
          name: devextreme-generator-artifacts
          path: ./packages/*/package.tgz

  devextreme-compilation:
    name: DevExtreme Compilation
    runs-on: farm
    env:
      VM_IMAGE: UBUNTU
      VM_MEMORY: 3072
      VM_CPU: 2
      VM_TIMEOUT: 7200
    needs: [ build-generators ]

    strategy:
      matrix:
        TASK: [generate-components, react-compilation-check, angular-compilation-check, vue-compilation-check]

    steps:
      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'http://npmproxy:4873'

      - name: Checkout
        uses: ./../../checkout

      - name: Get DevExtreme
        run: git clone https://github.com/DevExpress/DevExtreme

      - name: Build DevExtreme
        run: |
          cd ./DevExtreme
          npm install --no-package-lock --no-audit --no-fund
          npx gulp localization

      - uses: actions/download-artifact@master
        with:
          name: devextreme-generator-artifacts

      - name: Install Generators
        run: |
          cd ./DevExtreme
          npm i ../vdom/package.tgz
          npm i ../declarations/package.tgz
          npm i ../core-generator/package.tgz
          npm i ../angular-generator/package.tgz
          npm i ../vue-generator/package.tgz
          npm i ../react-generator/package.tgz
          npm i ../preact-generator/package.tgz
          npm i ../inferno-generator/package.tgz
          npm i ../build-helpers/package.tgz

      - name: Check - ${{ matrix.TASK }}
        env:
          TASK: ${{ matrix.TASK }}
        run: |
          cd ./DevExtreme
          npx gulp $TASK

  devextreme-qunit-tests:
    name: DevExtreme QUnit Tests
    runs-on: farm
    env:
      VM_IMAGE: UBUNTU
      VM_MEMORY: 3072
      VM_CPU: 2
      VM_TIMEOUT: 7200
    needs: [ build-generators ]

    strategy:
      matrix:
        NORENOVATION: [ true ]
        BROWSER: [ google-chrome ]
        CONSTEL: [ export, misc, ui, ui.widgets, ui.editors, ui.grid, ui.scheduler, viz, renovation ]
        JQUERY: [ jquery=3 ]

    steps:
      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'http://npmproxy:4873'

      - name: Checkout
        uses: ./../../checkout

      - name: Get DevExtreme
        run: git clone https://github.com/DevExpress/DevExtreme

      - name: Build DevExtreme
        env:
          DEVEXTREME_TEST_CI: "true"
          DOTNET_CLI_TELEMETRY_OPTOUT: "true"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
        run: |
          cd ./DevExtreme
          npm install --no-package-lock --no-audit --no-fund
          npm run build

      - uses: actions/download-artifact@master
        with:
          name: devextreme-generator-artifacts

      - name: Install Generators
        run: |
          cd ./DevExtreme
          npm i ../vdom/package.tgz
          npm i ../declarations/package.tgz
          npm i ../core-generator/package.tgz
          npm i ../angular-generator/package.tgz
          npm i ../vue-generator/package.tgz
          npm i ../react-generator/package.tgz
          npm i ../preact-generator/package.tgz
          npm i ../inferno-generator/package.tgz
          npm i ../build-helpers/package.tgz

      - name: Run QUnit tests
        env:
          CONSTEL: ${{ matrix.CONSTEL }}
          JQUERY: ${{ matrix.JQUERY }}
          BROWSER: ${{ matrix.BROWSER }}
          NORENOVATION: ${{ matrix.NORENOVATION }}
          GITHUBACTION: "true"
          TARGET: "test"
        run: |
          chmod +x ./docker-ci.sh
          ./docker-ci.sh
