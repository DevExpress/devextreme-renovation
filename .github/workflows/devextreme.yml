# This workflow will run tests for DevExtreme generators

name: DevExtreme

concurrency:
  group: wf-${{github.event.pull_request.number}}-${{github.workflow}}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - releases/*
  pull_request:
    branches:
      - '**'

jobs:
  build-generators:
    name: Build Generators
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Install packages
        run: npm install --no-audit --no-fund --ignore-scripts

      - name: Bootstrap
        run: npm run bootstrap:ci

      - name: Pack
        run: npm run pack

      - uses: actions/upload-artifact@master
        with:
          name: devextreme-generator-artifacts
          path: ./packages/*/package.tgz

  devextreme-compilation:
    name: DevExtreme Compilation
    runs-on: ubuntu-latest
    needs: [ build-generators ]

    strategy:
      matrix:
        TASK: [generate-components, react-compilation-check, angular-compilation-check, vue-compilation-check]

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get DevExtreme
        run: git clone -b 21_2 --single-branch https://github.com/DevExpress/DevExtreme

      - name: Build DevExtreme
        run: |
          cd ./DevExtreme
          npm install --no-package-lock --no-audit --no-fund
          npx gulp localization

      - uses: actions/download-artifact@master
        with:
          name: devextreme-generator-artifacts

      - name: Install Generators
        run: |
          cd ./DevExtreme
          npm i ../vdom/package.tgz
          npm i ../declarations/package.tgz
          npm i ../core-generator/package.tgz
          npm i ../angular-generator/package.tgz
          npm i ../vue-generator/package.tgz
          npm i ../react-generator/package.tgz
          npm i ../preact-generator/package.tgz
          npm i ../inferno-generator/package.tgz
          npm i ../build-helpers/package.tgz

      - name: Check - ${{ matrix.TASK }}
        env:
          TASK: ${{ matrix.TASK }}
        run: |
          cd ./DevExtreme
          npx gulp $TASK

  devextreme-jest-tests:
    name: DevExtreme Jest Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get DevExtreme
        run: git clone -b 21_2 --single-branch https://github.com/DevExpress/DevExtreme

      - name: Build DevExtreme
        env:
          DEVEXTREME_TEST_CI: "true"
          DOTNET_CLI_TELEMETRY_OPTOUT: "true"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
        run: |
          cd ./DevExtreme
          npm install --no-package-lock --no-audit --no-fund
          npm run build

      - uses: actions/download-artifact@master
        with:
          name: devextreme-generator-artifacts

      - name: Install Generators
        run: |
          cd ./DevExtreme
          npm i ../vdom/package.tgz
          npm i ../declarations/package.tgz
          npm i ../core-generator/package.tgz
          npm i ../angular-generator/package.tgz
          npm i ../vue-generator/package.tgz
          npm i ../react-generator/package.tgz
          npm i ../preact-generator/package.tgz
          npm i ../inferno-generator/package.tgz
          npm i ../build-helpers/package.tgz

      - name: Run Jest tests
        run: |
          cd ./DevExtreme
          npm run test-jest

  devextreme-qunit-tests:
    name: QUnit Constel ${{ matrix.CONSTEL }}
    runs-on: ubuntu-latest
    needs: [ devextreme-compilation ]

    strategy:
      matrix:
        BROWSER: [ google-chrome ]
        CONSTEL: [ export, misc, ui, ui.widgets(1/2), ui.widgets(2/2), ui.editors, ui.grid, ui.scheduler(1/2), ui.scheduler(2/2), viz, renovation ]

    steps:
      - name: Setup utils
        run: |
          sudo apt-get install -y dbus-x11 httping x11vnc xvfb

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get DevExtreme
        run: git clone -b 21_2 --single-branch https://github.com/DevExpress/DevExtreme

      - name: Build DevExtreme
        env:
          DEVEXTREME_TEST_CI: "true"
          DOTNET_CLI_TELEMETRY_OPTOUT: "true"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
        run: |
          cd ./DevExtreme
          npm install --no-package-lock --no-audit --no-fund
          npm run build

      - uses: actions/download-artifact@master
        with:
          name: devextreme-generator-artifacts

      - name: Install Generators
        run: |
          cd ./DevExtreme
          npm i ../vdom/package.tgz
          npm i ../declarations/package.tgz
          npm i ../core-generator/package.tgz
          npm i ../angular-generator/package.tgz
          npm i ../vue-generator/package.tgz
          npm i ../react-generator/package.tgz
          npm i ../preact-generator/package.tgz
          npm i ../inferno-generator/package.tgz
          npm i ../build-helpers/package.tgz
          npm ls 

      - name: Run QUnit tests
        env:
          CONSTEL: ${{ matrix.CONSTEL }}
          BROWSER: ${{ matrix.BROWSER }}
          NORENOVATION: "false"
          GITHUBACTION: "true"
          TARGET: "test"
        run: |
          chmod +x ./docker-ci.sh
          ./docker-ci.sh